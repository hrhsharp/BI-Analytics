table DimDates
	lineageTag: 78d648e4-d736-40e6-baa6-5e26971aac7c
	dataCategory: Time

	column Date
		dataType: dateTime
		isKey
		formatString: Long Date
		lineageTag: 62d95e79-398b-491d-aadc-f7cdbaf9f6d5
		summarizeBy: none
		sourceColumn: Date

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column Year = CONVERT(YEAR(DimDates[Date]),STRING)
		lineageTag: 9a307d88-fe3b-41e3-a061-5c741ac4878e
		summarizeBy: none

		annotation SummarizationSetBy = Automatic

	column MonthNo = MONTH(DimDates[Date])
		formatString: 0
		lineageTag: 6799b169-bd37-4659-ac11-bc1a65b46069
		summarizeBy: none

		annotation SummarizationSetBy = Automatic

	column Month = FORMAT(DimDates[Date],"MMMM")
		lineageTag: b21bfc60-00a7-41b7-9bfd-96351a7909b3
		summarizeBy: none

		annotation SummarizationSetBy = Automatic

	column MonthDesc = -1*DimDates[MonthNo]
		formatString: 0
		lineageTag: 35eb44d4-4fdc-42cc-9594-3b01e775c8ad
		summarizeBy: none

		annotation SummarizationSetBy = Automatic

	column YearDesc = -1*YEAR(DimDates[Date])
		formatString: 0
		lineageTag: 431e7f97-03d1-408f-aa13-2dbec3f1befa
		summarizeBy: none

		annotation SummarizationSetBy = Automatic

	partition DimDates = m
		mode: import
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Date = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Date", type date}})
				in
				    #"Changed Type"

	annotation PBI_ResultType = Table

